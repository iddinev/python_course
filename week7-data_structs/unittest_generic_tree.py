#!/usr/bin/env python3

#  from generic_tree import Tree, Node, stack, queue
from generic_tree import Tree

tree = Tree(root='/')
tree.add(value='a', parent='/')
tree.add(value='b', parent='/')
tree.add(value='c', parent='/')
print('real children of root')
print(tree._root.children)
print("")
print('Add 1 to node "c"')
tree.add(value=1, parent='c')
print('Add 3 to node "b"')
tree.add(value=3, parent='b')
print('Add 4 to node "b"')
tree.add(value=4, parent='b')
print('Add 2 to node 1')
tree.add(value=2, parent=1)
print("")
print('Print tree')
print(tree.get_queue())
print(tree.get_stack())
bfs = tree.bfs_from_root()
print("")
for i in range(len(bfs)):
    print(bfs[i])
#  print(tree.find(1))
#  root = Node('/')
#  new_node = Node('a')
#  new_new_node = Node('!')
#  last_new_node = Node('*')
#  new_new_node.add_child(last_new_node)
#  new_node.add_child(new_new_node)
#  root.add_child(new_node)
#  root.add_child(Node('b'))
#  new_node = Node('c')
#  new_node.add_child(Node('?'))
#  root.add_child(new_node)
#  print(queue(root))
#  print(stack(root))
